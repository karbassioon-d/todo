* {
  font-family: 'Bebas Neue', cursive;
  font-family: 'Inconsolata', monospace;
  color: whitesmoke;
}

body {
  height: 100%; /*might need to be 100vh*/
  width: 100vw;
  background: linear-gradient(90deg, rgba(15,10,17,1) 9%, rgba(19,10,26,1) 84%, rgba(20,10,27,1) 93%, rgba(20,10,27,1) 100%, rgba(134,0,255,1) 100%, rgba(61,9,121,1) 100%);

}

.big-boi-div {
  width: 100vw;
  height: 100%;
}


/* BUTTON STYLE*/

.btn {
  --border-color: linear-gradient(-45deg, #ffae00, #7e03aa, #00fffb);
  --border-width: .125em;
  --curve-size: .5em;
  --blur: 30px;
  --bg: #080312;
  --color: #afffff;
  color: var(--color);
    /* use position: relative; so that BG is only for .btn */
  position: relative;
  isolation: isolate;
  display: inline-grid;
  place-content: center;
  padding: .5em 1.5em;
  font-size: 17px;
  border: 0;
  text-transform: uppercase;
  box-shadow: 10px 10px 20px rgba(0, 0, 0, .6);
  clip-path: polygon(
            /* Top-left */
            0% var(--curve-size),
  
             var(--curve-size) 0,
            /* top-right */
            100% 0,
            100% calc(100% - var(--curve-size)),
             /* bottom-right 1 */
            calc(100% - var(--curve-size)) 100%,
            /* bottom-right 2 */
            0 100%);
  transition: color 250ms;
}
  
.btn::after,
.btn::before {
  content: '';
  position: absolute;
  inset: 0;
}
  
.btn::before {
  background: var(--border-color);
  background-size: 300% 300%;
  animation: move-bg7234 5s ease infinite;
  z-index: -2;
}
  
@keyframes move-bg7234 {
  0% {
    background-position: 31% 0%
  }
  
  50% {
    background-position: 70% 100%
  }
  
  100% {
    background-position: 31% 0%
  }
}
  
.btn::after {
  background: var(--bg);
  z-index: -1;
  clip-path: polygon(
            /* Top-left */
            var(--border-width) 
            calc(var(--curve-size) + var(--border-width) * .5),
  
            calc(var(--curve-size) + var(--border-width) * .5) var(--border-width),
  
            /* top-right */
            calc(100% - var(--border-width)) 
            var(--border-width),
  
            calc(100% - var(--border-width)) 
            calc(100% - calc(var(--curve-size) + var(--border-width) * .5)),
  
            /* bottom-right 1 */
            calc(100% - calc(var(--curve-size) + var(--border-width) * .5)) calc(100% - var(--border-width)),
            /* bottom-right 2 */
            var(--border-width) calc(100% - var(--border-width)));
  transition: clip-path 500ms;
}
  
.btn:where(:hover, :focus)::after {
  clip-path: polygon(
                /* Top-left */
                calc(100% - var(--border-width)) 
  
                calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
      
                calc(100% - var(--border-width))
  
                var(--border-width),
      
                /* top-right */
                calc(100% - var(--border-width))
  
                var(--border-width),
      
                calc(100% - var(--border-width)) 
  
                calc(100% - calc(var(--curve-size) + var(--border-width) * .5)),
      
                /* bottom-right 1 */
                calc(100% - calc(var(--curve-size) + var(--border-width) * .5)) 
                calc(100% - var(--border-width)),
  
                /* bottom-right 2 */
                calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
                calc(100% - var(--border-width)));
  transition: 200ms;
}
  
.btn:where(:hover, :focus) {
  color: #fff;
}

/*CHECKBOX STYLE*/
/* Hide the default checkbox */
.checkboxContainer {
  width: 50vw;
  margin-top: 2vh;
  
}

.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
  border-radius: 5px;
}
   
.container {
  flex-direction: column-reverse;
  display: block;
  overflow-wrap: break-word;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
  border-radius: 5px;
  box-shadow: 2px 2px 0px rgb(183, 183, 183);
  z-index: 1;
  }
   
/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1.3em;
  width: 1.3em;
  background-color: #ccc;
  border-radius: 5px;
}
   
/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  box-shadow: 3px 3px 0px rgb(183, 183, 183);
  transition: all 0.2s;
  opacity: 1;
  
  background-image: linear-gradient(45deg, rgb(100, 61, 219) 0%, rgb(217, 21, 239) 100%);
}
   
.container input ~ .checkmark {
  transition: all 0.2s;
  opacity: 1;
  box-shadow: 1px 1px 0px rgb(183, 183, 183);
}
   
/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  opacity: 0;
  transition: all 0.2s;
}
   
/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
opacity: 1;
transition: all 0.2s;

}

/* Style the checkmark/indicator */
.container .checkmark:after {
left: 0.45em;
top: 0.25em;
width: 0.25em;
height: 0.5em;
border: solid white;
border-width: 0 0.15em 0.15em 0;
transform: rotate(45deg);
}


/*INPUT FIELD STYLE*/
.inputBox {
margin-bottom: 3vh;
--border-color: linear-gradient(-45deg, #ffae00, #7e03aa, #00fffb);
--border-width: .125em;
--curve-size: .5em;
--blur: 30px;
--bg: #080312;
--color: #afffff;
clip-path: polygon(
            /* Top-left */
            0% var(--curve-size),
  
             var(--curve-size) 0,
            /* top-right */
            100% 0,
            100% calc(100% - var(--curve-size)),
             /* bottom-right 1 */
            calc(100% - var(--curve-size)) 100%,
            /* bottom-right 2 */
            0 100%);
padding-left: 1rem;
width: 50vw;
font-size: 1.5em;
display: flex;
 background: linear-gradient(100deg, rgb(100, 61, 219) 0%, rgb(217, 21, 239) 100%);
 border: 2px solid #7e03aa;
}
.inputBox::before{
  background: var(--border-color);
  background-size: 300% 300%;
  animation: move-bg7234 5s ease infinite;
  z-index: -2;
}




/*WAVE*/
.wave {
  bottom: 0;
  position: fixed;
  z-index: -1;
}